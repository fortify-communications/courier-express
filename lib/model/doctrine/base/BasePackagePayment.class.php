<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PackagePayment', 'doctrine');

/**
 * BasePackagePayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $payment_id
 * @property integer $package_id
 * @property Payment $Payment
 * @property Package $Package
 * @property Package $Package_3
 * @property Payment $Payment_4
 * 
 * @method integer        getId()         Returns the current record's "id" value
 * @method integer        getPaymentId()  Returns the current record's "payment_id" value
 * @method integer        getPackageId()  Returns the current record's "package_id" value
 * @method Payment        getPayment()    Returns the current record's "Payment" value
 * @method Package        getPackage()    Returns the current record's "Package" value
 * @method Package        getPackage3()   Returns the current record's "Package_3" value
 * @method Payment        getPayment4()   Returns the current record's "Payment_4" value
 * @method PackagePayment setId()         Sets the current record's "id" value
 * @method PackagePayment setPaymentId()  Sets the current record's "payment_id" value
 * @method PackagePayment setPackageId()  Sets the current record's "package_id" value
 * @method PackagePayment setPayment()    Sets the current record's "Payment" value
 * @method PackagePayment setPackage()    Sets the current record's "Package" value
 * @method PackagePayment setPackage3()   Sets the current record's "Package_3" value
 * @method PackagePayment setPayment4()   Sets the current record's "Payment_4" value
 * 
 * @package    cexp
 * @subpackage model
 * @author     Courier Express
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePackagePayment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('package_payment');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('payment_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('package_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Payment', array(
             'local' => 'payment_id',
             'foreign' => 'id'));

        $this->hasOne('Package', array(
             'local' => 'package_id',
             'foreign' => 'id'));

        $this->hasOne('Package as Package_3', array(
             'local' => 'package_id',
             'foreign' => 'id'));

        $this->hasOne('Payment as Payment_4', array(
             'local' => 'payment_id',
             'foreign' => 'id'));
    }
}