<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ClientType', 'doctrine');

/**
 * BaseClientType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $type
 * @property Doctrine_Collection $Client
 * @property Doctrine_Collection $Client_10
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method string              getType()      Returns the current record's "type" value
 * @method Doctrine_Collection getClient()    Returns the current record's "Client" collection
 * @method Doctrine_Collection getClient10()  Returns the current record's "Client_10" collection
 * @method ClientType          setId()        Sets the current record's "id" value
 * @method ClientType          setType()      Sets the current record's "type" value
 * @method ClientType          setClient()    Sets the current record's "Client" collection
 * @method ClientType          setClient10()  Sets the current record's "Client_10" collection
 * 
 * @package    cexp
 * @subpackage model
 * @author     Courier Express
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClientType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client_type');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'sender',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Client', array(
             'local' => 'id',
             'foreign' => 'type_id'));

        $this->hasMany('Client as Client_10', array(
             'local' => 'id',
             'foreign' => 'type_id'));
    }
}