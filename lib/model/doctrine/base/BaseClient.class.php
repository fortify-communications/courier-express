<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Client', 'doctrine');

/**
 * BaseClient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $address_id
 * @property integer $type_id
 * @property integer $detail_id
 * @property integer $payment_detail_id
 * @property integer $login_id
 * @property Address $Address
 * @property ClientDetail $ClientDetail
 * @property ClientLogin $ClientLogin
 * @property Address $Address_4
 * @property ClientType $ClientType
 * @property ClientDetail $ClientDetail_6
 * @property ClientPaymentDetail $ClientPaymentDetail
 * @property ClientLogin $ClientLogin_8
 * @property ClientPaymentDetail $ClientPaymentDetail_9
 * @property ClientType $ClientType_10
 * @property Doctrine_Collection $Courier
 * @property Doctrine_Collection $Courier_2
 * @property Doctrine_Collection $Package
 * @property Doctrine_Collection $Package_5
 * @property Doctrine_Collection $Payment
 * @property Doctrine_Collection $Payment_2
 * @property Doctrine_Collection $Staff
 * @property Doctrine_Collection $Staff_3
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method integer             getAddressId()             Returns the current record's "address_id" value
 * @method integer             getTypeId()                Returns the current record's "type_id" value
 * @method integer             getDetailId()              Returns the current record's "detail_id" value
 * @method integer             getPaymentDetailId()       Returns the current record's "payment_detail_id" value
 * @method integer             getLoginId()               Returns the current record's "login_id" value
 * @method Address             getAddress()               Returns the current record's "Address" value
 * @method ClientDetail        getClientDetail()          Returns the current record's "ClientDetail" value
 * @method ClientLogin         getClientLogin()           Returns the current record's "ClientLogin" value
 * @method Address             getAddress4()              Returns the current record's "Address_4" value
 * @method ClientType          getClientType()            Returns the current record's "ClientType" value
 * @method ClientDetail        getClientDetail6()         Returns the current record's "ClientDetail_6" value
 * @method ClientPaymentDetail getClientPaymentDetail()   Returns the current record's "ClientPaymentDetail" value
 * @method ClientLogin         getClientLogin8()          Returns the current record's "ClientLogin_8" value
 * @method ClientPaymentDetail getClientPaymentDetail9()  Returns the current record's "ClientPaymentDetail_9" value
 * @method ClientType          getClientType10()          Returns the current record's "ClientType_10" value
 * @method Doctrine_Collection getCourier()               Returns the current record's "Courier" collection
 * @method Doctrine_Collection getCourier2()              Returns the current record's "Courier_2" collection
 * @method Doctrine_Collection getPackage()               Returns the current record's "Package" collection
 * @method Doctrine_Collection getPackage5()              Returns the current record's "Package_5" collection
 * @method Doctrine_Collection getPayment()               Returns the current record's "Payment" collection
 * @method Doctrine_Collection getPayment2()              Returns the current record's "Payment_2" collection
 * @method Doctrine_Collection getStaff()                 Returns the current record's "Staff" collection
 * @method Doctrine_Collection getStaff3()                Returns the current record's "Staff_3" collection
 * @method Client              setId()                    Sets the current record's "id" value
 * @method Client              setAddressId()             Sets the current record's "address_id" value
 * @method Client              setTypeId()                Sets the current record's "type_id" value
 * @method Client              setDetailId()              Sets the current record's "detail_id" value
 * @method Client              setPaymentDetailId()       Sets the current record's "payment_detail_id" value
 * @method Client              setLoginId()               Sets the current record's "login_id" value
 * @method Client              setAddress()               Sets the current record's "Address" value
 * @method Client              setClientDetail()          Sets the current record's "ClientDetail" value
 * @method Client              setClientLogin()           Sets the current record's "ClientLogin" value
 * @method Client              setAddress4()              Sets the current record's "Address_4" value
 * @method Client              setClientType()            Sets the current record's "ClientType" value
 * @method Client              setClientDetail6()         Sets the current record's "ClientDetail_6" value
 * @method Client              setClientPaymentDetail()   Sets the current record's "ClientPaymentDetail" value
 * @method Client              setClientLogin8()          Sets the current record's "ClientLogin_8" value
 * @method Client              setClientPaymentDetail9()  Sets the current record's "ClientPaymentDetail_9" value
 * @method Client              setClientType10()          Sets the current record's "ClientType_10" value
 * @method Client              setCourier()               Sets the current record's "Courier" collection
 * @method Client              setCourier2()              Sets the current record's "Courier_2" collection
 * @method Client              setPackage()               Sets the current record's "Package" collection
 * @method Client              setPackage5()              Sets the current record's "Package_5" collection
 * @method Client              setPayment()               Sets the current record's "Payment" collection
 * @method Client              setPayment2()              Sets the current record's "Payment_2" collection
 * @method Client              setStaff()                 Sets the current record's "Staff" collection
 * @method Client              setStaff3()                Sets the current record's "Staff_3" collection
 * 
 * @package    cexp
 * @subpackage model
 * @author     Courier Express
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClient extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('address_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('detail_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('payment_detail_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('login_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Address', array(
             'local' => 'address_id',
             'foreign' => 'id'));

        $this->hasOne('ClientDetail', array(
             'local' => 'detail_id',
             'foreign' => 'id'));

        $this->hasOne('ClientLogin', array(
             'local' => 'login_id',
             'foreign' => 'id'));

        $this->hasOne('Address as Address_4', array(
             'local' => 'address_id',
             'foreign' => 'id'));

        $this->hasOne('ClientType', array(
             'local' => 'type_id',
             'foreign' => 'id'));

        $this->hasOne('ClientDetail as ClientDetail_6', array(
             'local' => 'detail_id',
             'foreign' => 'id'));

        $this->hasOne('ClientPaymentDetail', array(
             'local' => 'payment_detail_id',
             'foreign' => 'id'));

        $this->hasOne('ClientLogin as ClientLogin_8', array(
             'local' => 'login_id',
             'foreign' => 'id'));

        $this->hasOne('ClientPaymentDetail as ClientPaymentDetail_9', array(
             'local' => 'payment_detail_id',
             'foreign' => 'id'));

        $this->hasOne('ClientType as ClientType_10', array(
             'local' => 'type_id',
             'foreign' => 'id'));

        $this->hasMany('Courier', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('Courier as Courier_2', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('Package', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('Package as Package_5', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('Payment', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('Payment as Payment_2', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('Staff', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('Staff as Staff_3', array(
             'local' => 'id',
             'foreign' => 'client_id'));
    }
}