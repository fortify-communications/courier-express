<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Address', 'doctrine');

/**
 * BaseAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $apt_unit
 * @property string $street_number
 * @property string $street_name
 * @property string $street_type
 * @property string $city
 * @property integer $province_id
 * @property integer $state_id
 * @property integer $province_state_id
 * @property integer $country_id
 * @property string $postal_code
 * @property Province $Province
 * @property State $State
 * @property Country $Country
 * @property Doctrine_Collection $Client
 * @property Doctrine_Collection $Client_4
 * @property Doctrine_Collection $ClientPaymentDetail
 * @property Doctrine_Collection $Locate
 * @property Doctrine_Collection $Package
 * @property Doctrine_Collection $Package_6
 * @property Doctrine_Collection $Package_7
 * @property Doctrine_Collection $Package_12
 * @property Doctrine_Collection $Staff
 * @property Doctrine_Collection $Staff_4
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getAptUnit()             Returns the current record's "apt_unit" value
 * @method string              getStreetNumber()        Returns the current record's "street_number" value
 * @method string              getStreetName()          Returns the current record's "street_name" value
 * @method string              getStreetType()          Returns the current record's "street_type" value
 * @method string              getCity()                Returns the current record's "city" value
 * @method integer             getProvinceId()          Returns the current record's "province_id" value
 * @method integer             getStateId()             Returns the current record's "state_id" value
 * @method integer             getProvinceStateId()     Returns the current record's "province_state_id" value
 * @method integer             getCountryId()           Returns the current record's "country_id" value
 * @method string              getPostalCode()          Returns the current record's "postal_code" value
 * @method Province            getProvince()            Returns the current record's "Province" value
 * @method State               getState()               Returns the current record's "State" value
 * @method Country             getCountry()             Returns the current record's "Country" value
 * @method Doctrine_Collection getClient()              Returns the current record's "Client" collection
 * @method Doctrine_Collection getClient4()             Returns the current record's "Client_4" collection
 * @method Doctrine_Collection getClientPaymentDetail() Returns the current record's "ClientPaymentDetail" collection
 * @method Doctrine_Collection getLocate()              Returns the current record's "Locate" collection
 * @method Doctrine_Collection getPackage()             Returns the current record's "Package" collection
 * @method Doctrine_Collection getPackage6()            Returns the current record's "Package_6" collection
 * @method Doctrine_Collection getPackage7()            Returns the current record's "Package_7" collection
 * @method Doctrine_Collection getPackage12()           Returns the current record's "Package_12" collection
 * @method Doctrine_Collection getStaff()               Returns the current record's "Staff" collection
 * @method Doctrine_Collection getStaff4()              Returns the current record's "Staff_4" collection
 * @method Address             setId()                  Sets the current record's "id" value
 * @method Address             setAptUnit()             Sets the current record's "apt_unit" value
 * @method Address             setStreetNumber()        Sets the current record's "street_number" value
 * @method Address             setStreetName()          Sets the current record's "street_name" value
 * @method Address             setStreetType()          Sets the current record's "street_type" value
 * @method Address             setCity()                Sets the current record's "city" value
 * @method Address             setProvinceId()          Sets the current record's "province_id" value
 * @method Address             setStateId()             Sets the current record's "state_id" value
 * @method Address             setProvinceStateId()     Sets the current record's "province_state_id" value
 * @method Address             setCountryId()           Sets the current record's "country_id" value
 * @method Address             setPostalCode()          Sets the current record's "postal_code" value
 * @method Address             setProvince()            Sets the current record's "Province" value
 * @method Address             setState()               Sets the current record's "State" value
 * @method Address             setCountry()             Sets the current record's "Country" value
 * @method Address             setClient()              Sets the current record's "Client" collection
 * @method Address             setClient4()             Sets the current record's "Client_4" collection
 * @method Address             setClientPaymentDetail() Sets the current record's "ClientPaymentDetail" collection
 * @method Address             setLocate()              Sets the current record's "Locate" collection
 * @method Address             setPackage()             Sets the current record's "Package" collection
 * @method Address             setPackage6()            Sets the current record's "Package_6" collection
 * @method Address             setPackage7()            Sets the current record's "Package_7" collection
 * @method Address             setPackage12()           Sets the current record's "Package_12" collection
 * @method Address             setStaff()               Sets the current record's "Staff" collection
 * @method Address             setStaff4()              Sets the current record's "Staff_4" collection
 * 
 * @package    cexp
 * @subpackage model
 * @author     Courier Express
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAddress extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('address');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('apt_unit', 'string', 16, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('street_number', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('street_name', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('street_type', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('province_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('state_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('province_state_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('country_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('postal_code', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Province', array(
             'local' => 'province_id',
             'foreign' => 'id'));

        $this->hasOne('State', array(
             'local' => 'state_id',
             'foreign' => 'id'));

        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasMany('Client', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $this->hasMany('Client as Client_4', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $this->hasMany('ClientPaymentDetail', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $this->hasMany('Locate', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $this->hasMany('Package', array(
             'local' => 'id',
             'foreign' => 'from_address_id'));

        $this->hasMany('Package as Package_6', array(
             'local' => 'id',
             'foreign' => 'from_address_id'));

        $this->hasMany('Package as Package_7', array(
             'local' => 'id',
             'foreign' => 'to_address_id'));

        $this->hasMany('Package as Package_12', array(
             'local' => 'id',
             'foreign' => 'to_address_id'));

        $this->hasMany('Staff', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $this->hasMany('Staff as Staff_4', array(
             'local' => 'id',
             'foreign' => 'address_id'));
    }
}