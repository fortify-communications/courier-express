<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ClientDetail', 'doctrine');

/**
 * BaseClientDetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $details
 * @property string $name
 * @property string $phone
 * @property string $email
 * @property string $contact
 * @property integer $facebook_uid
 * @property string $how_did_u_hear
 * @property timestamp $registration_date
 * @property Doctrine_Collection $Client
 * @property Doctrine_Collection $Client_6
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getDetails()           Returns the current record's "details" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getPhone()             Returns the current record's "phone" value
 * @method string              getEmail()             Returns the current record's "email" value
 * @method string              getContact()           Returns the current record's "contact" value
 * @method integer             getFacebookUid()       Returns the current record's "facebook_uid" value
 * @method string              getHowDidUHear()       Returns the current record's "how_did_u_hear" value
 * @method timestamp           getRegistrationDate()  Returns the current record's "registration_date" value
 * @method Doctrine_Collection getClient()            Returns the current record's "Client" collection
 * @method Doctrine_Collection getClient6()           Returns the current record's "Client_6" collection
 * @method ClientDetail        setId()                Sets the current record's "id" value
 * @method ClientDetail        setDetails()           Sets the current record's "details" value
 * @method ClientDetail        setName()              Sets the current record's "name" value
 * @method ClientDetail        setPhone()             Sets the current record's "phone" value
 * @method ClientDetail        setEmail()             Sets the current record's "email" value
 * @method ClientDetail        setContact()           Sets the current record's "contact" value
 * @method ClientDetail        setFacebookUid()       Sets the current record's "facebook_uid" value
 * @method ClientDetail        setHowDidUHear()       Sets the current record's "how_did_u_hear" value
 * @method ClientDetail        setRegistrationDate()  Sets the current record's "registration_date" value
 * @method ClientDetail        setClient()            Sets the current record's "Client" collection
 * @method ClientDetail        setClient6()           Sets the current record's "Client_6" collection
 * 
 * @package    cexp
 * @subpackage model
 * @author     Courier Express
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClientDetail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client_detail');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('details', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('name', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('phone', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('email', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('contact', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('facebook_uid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('how_did_u_hear', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('registration_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Client', array(
             'local' => 'id',
             'foreign' => 'detail_id'));

        $this->hasMany('Client as Client_6', array(
             'local' => 'id',
             'foreign' => 'detail_id'));
    }
}