<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ClientPaymentDetail', 'doctrine');

/**
 * BaseClientPaymentDetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $profile_code
 * @property integer $card_type_id
 * @property string $card_number
 * @property integer $exp_month
 * @property integer $exp_year
 * @property string $ccv_number
 * @property string $name
 * @property string $address1
 * @property string $address2
 * @property integer $address_id
 * @property integer $is_default
 * @property CreditCardType $CreditCardType
 * @property Address $Address
 * @property Doctrine_Collection $Client
 * @property Doctrine_Collection $Client_9
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getProfileCode()    Returns the current record's "profile_code" value
 * @method integer             getCardTypeId()     Returns the current record's "card_type_id" value
 * @method string              getCardNumber()     Returns the current record's "card_number" value
 * @method integer             getExpMonth()       Returns the current record's "exp_month" value
 * @method integer             getExpYear()        Returns the current record's "exp_year" value
 * @method string              getCcvNumber()      Returns the current record's "ccv_number" value
 * @method string              getName()           Returns the current record's "name" value
 * @method string              getAddress1()       Returns the current record's "address1" value
 * @method string              getAddress2()       Returns the current record's "address2" value
 * @method integer             getAddressId()      Returns the current record's "address_id" value
 * @method integer             getIsDefault()      Returns the current record's "is_default" value
 * @method CreditCardType      getCreditCardType() Returns the current record's "CreditCardType" value
 * @method Address             getAddress()        Returns the current record's "Address" value
 * @method Doctrine_Collection getClient()         Returns the current record's "Client" collection
 * @method Doctrine_Collection getClient9()        Returns the current record's "Client_9" collection
 * @method ClientPaymentDetail setId()             Sets the current record's "id" value
 * @method ClientPaymentDetail setProfileCode()    Sets the current record's "profile_code" value
 * @method ClientPaymentDetail setCardTypeId()     Sets the current record's "card_type_id" value
 * @method ClientPaymentDetail setCardNumber()     Sets the current record's "card_number" value
 * @method ClientPaymentDetail setExpMonth()       Sets the current record's "exp_month" value
 * @method ClientPaymentDetail setExpYear()        Sets the current record's "exp_year" value
 * @method ClientPaymentDetail setCcvNumber()      Sets the current record's "ccv_number" value
 * @method ClientPaymentDetail setName()           Sets the current record's "name" value
 * @method ClientPaymentDetail setAddress1()       Sets the current record's "address1" value
 * @method ClientPaymentDetail setAddress2()       Sets the current record's "address2" value
 * @method ClientPaymentDetail setAddressId()      Sets the current record's "address_id" value
 * @method ClientPaymentDetail setIsDefault()      Sets the current record's "is_default" value
 * @method ClientPaymentDetail setCreditCardType() Sets the current record's "CreditCardType" value
 * @method ClientPaymentDetail setAddress()        Sets the current record's "Address" value
 * @method ClientPaymentDetail setClient()         Sets the current record's "Client" collection
 * @method ClientPaymentDetail setClient9()        Sets the current record's "Client_9" collection
 * 
 * @package    cexp
 * @subpackage model
 * @author     Courier Express
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClientPaymentDetail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client_payment_detail');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('profile_code', 'string', 127, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 127,
             ));
        $this->hasColumn('card_type_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('card_number', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('exp_month', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('exp_year', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ccv_number', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('address1', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('address2', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('address_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('is_default', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CreditCardType', array(
             'local' => 'card_type_id',
             'foreign' => 'id'));

        $this->hasOne('Address', array(
             'local' => 'address_id',
             'foreign' => 'id'));

        $this->hasMany('Client', array(
             'local' => 'id',
             'foreign' => 'payment_detail_id'));

        $this->hasMany('Client as Client_9', array(
             'local' => 'id',
             'foreign' => 'payment_detail_id'));
    }
}