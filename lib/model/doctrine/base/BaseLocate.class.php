<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Locate', 'doctrine');

/**
 * BaseLocate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $address_id
 * @property string $lat
 * @property string $lng
 * @property Address $Address
 * 
 * @method integer getId()         Returns the current record's "id" value
 * @method integer getAddressId()  Returns the current record's "address_id" value
 * @method string  getLat()        Returns the current record's "lat" value
 * @method string  getLng()        Returns the current record's "lng" value
 * @method Address getAddress()    Returns the current record's "Address" value
 * @method Locate  setId()         Sets the current record's "id" value
 * @method Locate  setAddressId()  Sets the current record's "address_id" value
 * @method Locate  setLat()        Sets the current record's "lat" value
 * @method Locate  setLng()        Sets the current record's "lng" value
 * @method Locate  setAddress()    Sets the current record's "Address" value
 * 
 * @package    cexp
 * @subpackage model
 * @author     Courier Express
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLocate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('locate');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('address_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('lat', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('lng', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Address', array(
             'local' => 'address_id',
             'foreign' => 'id'));
    }
}