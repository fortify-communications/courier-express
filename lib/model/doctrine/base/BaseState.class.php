<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('State', 'doctrine');

/**
 * BaseState
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $alpha_code
 * @property string $abbreviation
 * @property integer $numerical_code
 * @property Doctrine_Collection $Address
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method string              getAlphaCode()      Returns the current record's "alpha_code" value
 * @method string              getAbbreviation()   Returns the current record's "abbreviation" value
 * @method integer             getNumericalCode()  Returns the current record's "numerical_code" value
 * @method Doctrine_Collection getAddress()        Returns the current record's "Address" collection
 * @method State               setId()             Sets the current record's "id" value
 * @method State               setName()           Sets the current record's "name" value
 * @method State               setAlphaCode()      Sets the current record's "alpha_code" value
 * @method State               setAbbreviation()   Sets the current record's "abbreviation" value
 * @method State               setNumericalCode()  Sets the current record's "numerical_code" value
 * @method State               setAddress()        Sets the current record's "Address" collection
 * 
 * @package    cexp
 * @subpackage model
 * @author     Courier Express
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseState extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('state');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('alpha_code', 'string', 2, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('abbreviation', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('numerical_code', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Address', array(
             'local' => 'id',
             'foreign' => 'state_id'));
    }
}