<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PackageStatus', 'doctrine');

/**
 * BasePackageStatus
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $status
 * @property Doctrine_Collection $Package
 * @property Doctrine_Collection $Package_11
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method string              getStatus()     Returns the current record's "status" value
 * @method Doctrine_Collection getPackage()    Returns the current record's "Package" collection
 * @method Doctrine_Collection getPackage11()  Returns the current record's "Package_11" collection
 * @method PackageStatus       setId()         Sets the current record's "id" value
 * @method PackageStatus       setStatus()     Sets the current record's "status" value
 * @method PackageStatus       setPackage()    Sets the current record's "Package" collection
 * @method PackageStatus       setPackage11()  Sets the current record's "Package_11" collection
 * 
 * @package    cexp
 * @subpackage model
 * @author     Courier Express
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePackageStatus extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('package_status');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('status', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Package', array(
             'local' => 'id',
             'foreign' => 'status_id'));

        $this->hasMany('Package as Package_11', array(
             'local' => 'id',
             'foreign' => 'status_id'));
    }
}